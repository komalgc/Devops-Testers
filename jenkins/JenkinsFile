pipeline {
    agent any

    stages {
        stage('Unit Tests - Backend') {
            agent {
                docker {
                    image 'golang:1.21-alpine'
                    reuseNode true
                }
            }
            environment {
                GOCACHE = "${env.WORKSPACE}/.cache"  // Store Go cache in workspace
            }
            steps {
                script {
                    dir('bugtracker-backend') {
                        sh '''
                          mkdir -p $GOCACHE
                          go test -v ./... 2>&1 | go-junit-report > test-results.xml
                        '''
                    }
                }
            }

            post {
                always {
                    junit 'bugtracker-backend/test-results.xml'
                }
            }        }


        stage('Unit Tests - Frontend') {
            agent {
                docker {
                    image 'node:20-alpine'
                    reuseNode true
                }
            }
         
            steps {
                script {
                    dir('bugtracker-frontend') {
                        sh '''
                          npm ci
                          npm test 
                        '''
                    }
                }
            }

            post {
            always {
                junit 'bugtracker-frontend/test-results.xml'
            }
        }

        
        }
    }


}
